drop database ecommerce;
create database ecommerce;
use ecommerce;

CREATE TABLE USER (
    FNAME VARCHAR(255) NOT NULL,
    LNAME VARCHAR(255) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(255) NOT NULL,
    PHONE_NUMBER VARCHAR(20) UNIQUE,
    EMAIL VARCHAR(255) UNIQUE,
    LOCATION VARCHAR(255),
    ROLE VARCHAR(5) NOT NULL CHECK (ROLE IN ('ADMIN', 'USER'))
);

CREATE TABLE CATEGORY (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ICON VARCHAR(255)
);

CREATE TABLE PRODUCT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    AUTHOR VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    PRICE FLOAT NOT NULL CHECK (PRICE >= 0),
    CATEGORY_ID INT,
    IMAGE VARCHAR(255),
    SALES INT NOT NULL CHECK (SALES >= 0),
    QUANTITY INT NOT NULL CHECK(QUANTITY >= 0),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID) ON DELETE SET NULL
);

CREATE TABLE CART (
	USERNAME VARCHAR(255) NOT NULL,
    PRODUCT_ID INT NOT NULL,
    PRIMARY KEY(USERNAME, PRODUCT_ID),
    FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME) ON DELETE CASCADE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE CASCADE
);

CREATE TABLE TRANSACTION (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(255),
    FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME) ON DELETE SET NULL,
    TRANSACTION_DATE DATETIME NOT NULL
);

CREATE TABLE TRANSACTION_CONTAIN (
	TRANSACTION_ID INT,
    PRODUCT_ID INT,
    QUANTITY INT NOT NULL,
    PRIMARY KEY(TRANSACTION_ID, PRODUCT_ID),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION(ID) ON DELETE CASCADE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE CASCADE
);

CREATE TABLE STORE_LOCATIONS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    API_LOCATION VARCHAR(255) NOT NULL
);
